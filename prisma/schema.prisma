// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Donation {
  id        String   @id @default(uuid())
  loggedAt DateTime @default(now())

  // Donation details
  status               DonationStatus @default(PROCESSING)
  donatedAt            DateTime
  adheringLabels       String[]

  allocatedToCauses Int
  unallocatedToCauses Int
  // { v2Causes: { name: string, amount: Int, region: DonationRegion }[] }
  allocationBreakdown Json?

  causeName     String?
  causeRegion   DonationRegion

  // Payment details
  transactionStatus    TransactionStatus @default(SUCCEEDED)
  amountDonatedInCents Int
  amountRefunded Int
  amountChargedInCents Int
  feesChargedInCents   Int
  feesDonatedInCents    Int
  currency             Currency @default(CAD)

  // Donor details
  donorFirstName            String
  donorMiddleName String?
  donorLastName             String
  donorEmail                String
  donorAddressLineAddress String
  donorAddressCity         String
  donorAddressState        String
  donorAddressCountry      Country @default(CA)
  donorAddressPostalCode  String

  // Billing details
  billingAddressPostalCode String

  // Stripe identifiers
  stripeCustomerId      String?
  stripePaymentIntentId String? @unique
  stripePaymentMethodId String?
  stripeChargeId        String? @unique
  stripeBalanceTxnId    String?

  // Payment method details
  paymentMethodType PaymentMethodType
  pmCardFunding    String? // debit or credit
  pmCardBrand      String?
  pmCardLast4      String?
  pmCardExpMonth   Int?
  pmCardExpYear    Int?

  // legacy support
  legacyIdV0 String?
  legacyIdV1 String?
}

model ProofDetailsMap {
  // Amount distributed for this specific donation. 
  // The parent proof has the total amount in this distribution
  id                       String @id @default(uuid())
  amountDistributedInCents Int
  parentProofId            String
}

enum PaymentMethodType {
  CARD
  ACSS_DEBIT
  ETRANSFER
  CASH
}

model Proof {
  id                       String   @id @default(uuid())
  amountDistributedInCents Int
  messageToDonor           String
  regionDistributed        String
  adheringLabels           String[]
  donations                String[]
}

enum DonationStatus {
  PROCESSING
  DELIVERED_TO_PARTNERS
  PARTIALLY_DISTRIBUTED
  FULLY_DISTRIBUTED
}

enum DonationRegion {
  ANYWHERE
  IRAQ
  INDIA
  AFRICA
  CANADA
}

enum TransactionStatus {
  PENDING
  FAILED
  SUCCEEDED
}

enum Currency {
  CAD
  USD
}

enum Country {
  CA
  US
  AU
  UK
}